{"version":3,"file":"vendor-react-use-measure.js","sources":["../node_modules/react-use-measure/dist/web.js"],"sourcesContent":["import { useState, useRef, useEffect, useMemo } from 'react';\nimport createDebounce from 'debounce';\n\nfunction useMeasure(_temp) {\n  let {\n    debounce,\n    scroll,\n    polyfill,\n    offsetSize\n  } = _temp === void 0 ? {\n    debounce: 0,\n    scroll: false,\n    offsetSize: false\n  } : _temp;\n  const ResizeObserver = polyfill || (typeof window === 'undefined' ? class ResizeObserver {} : window.ResizeObserver);\n\n  if (!ResizeObserver) {\n    throw new Error('This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills');\n  }\n\n  const [bounds, set] = useState({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0,\n    bottom: 0,\n    right: 0,\n    x: 0,\n    y: 0\n  }); // keep all state in a ref\n\n  const state = useRef({\n    element: null,\n    scrollContainers: null,\n    resizeObserver: null,\n    lastBounds: bounds\n  }); // set actual debounce values early, so effects know if they should react accordingly\n\n  const scrollDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.scroll : null;\n  const resizeDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.resize : null; // make sure to update state only as long as the component is truly mounted\n\n  const mounted = useRef(false);\n  useEffect(() => {\n    mounted.current = true;\n    return () => void (mounted.current = false);\n  }); // memoize handlers, so event-listeners know when they should update\n\n  const [forceRefresh, resizeChange, scrollChange] = useMemo(() => {\n    const callback = () => {\n      if (!state.current.element) return;\n      const {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      } = state.current.element.getBoundingClientRect();\n      const size = {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      };\n\n      if (state.current.element instanceof HTMLElement && offsetSize) {\n        size.height = state.current.element.offsetHeight;\n        size.width = state.current.element.offsetWidth;\n      }\n\n      Object.freeze(size);\n      if (mounted.current && !areBoundsEqual(state.current.lastBounds, size)) set(state.current.lastBounds = size);\n    };\n\n    return [callback, resizeDebounce ? createDebounce(callback, resizeDebounce) : callback, scrollDebounce ? createDebounce(callback, scrollDebounce) : callback];\n  }, [set, offsetSize, scrollDebounce, resizeDebounce]); // cleanup current scroll-listeners / observers\n\n  function removeListeners() {\n    if (state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(element => element.removeEventListener('scroll', scrollChange, true));\n      state.current.scrollContainers = null;\n    }\n\n    if (state.current.resizeObserver) {\n      state.current.resizeObserver.disconnect();\n      state.current.resizeObserver = null;\n    }\n  } // add scroll-listeners / observers\n\n\n  function addListeners() {\n    if (!state.current.element) return;\n    state.current.resizeObserver = new ResizeObserver(scrollChange);\n    state.current.resizeObserver.observe(state.current.element);\n\n    if (scroll && state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(scrollContainer => scrollContainer.addEventListener('scroll', scrollChange, {\n        capture: true,\n        passive: true\n      }));\n    }\n  } // the ref we expose to the user\n\n\n  const ref = node => {\n    if (!node || node === state.current.element) return;\n    removeListeners();\n    state.current.element = node;\n    state.current.scrollContainers = findScrollContainers(node);\n    addListeners();\n  }; // add general event listeners\n\n\n  useOnWindowScroll(scrollChange, Boolean(scroll));\n  useOnWindowResize(resizeChange); // respond to changes that are relevant for the listeners\n\n  useEffect(() => {\n    removeListeners();\n    addListeners();\n  }, [scroll, scrollChange, resizeChange]); // remove all listeners when the components unmounts\n\n  useEffect(() => removeListeners, []);\n  return [ref, bounds, forceRefresh];\n} // Adds native resize listener to window\n\n\nfunction useOnWindowResize(onWindowResize) {\n  useEffect(() => {\n    const cb = onWindowResize;\n    window.addEventListener('resize', cb);\n    return () => void window.removeEventListener('resize', cb);\n  }, [onWindowResize]);\n}\n\nfunction useOnWindowScroll(onScroll, enabled) {\n  useEffect(() => {\n    if (enabled) {\n      const cb = onScroll;\n      window.addEventListener('scroll', cb, {\n        capture: true,\n        passive: true\n      });\n      return () => void window.removeEventListener('scroll', cb, true);\n    }\n  }, [onScroll, enabled]);\n} // Returns a list of scroll offsets\n\n\nfunction findScrollContainers(element) {\n  const result = [];\n  if (!element || element === document.body) return result;\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = window.getComputedStyle(element);\n  if ([overflow, overflowX, overflowY].some(prop => prop === 'auto' || prop === 'scroll')) result.push(element);\n  return [...result, ...findScrollContainers(element.parentElement)];\n} // Checks if element boundaries are equal\n\n\nconst keys = ['x', 'y', 'top', 'bottom', 'left', 'right', 'width', 'height'];\n\nconst areBoundsEqual = (a, b) => keys.every(key => a[key] === b[key]);\n\nexport { useMeasure as default };\n"],"names":["useMeasure","_temp","debounce","scroll","polyfill","offsetSize","ResizeObserver","bounds","set","useState","state","useRef","scrollDebounce","resizeDebounce","mounted","useEffect","forceRefresh","resizeChange","scrollChange","useMemo","callback","left","top","width","height","bottom","right","x","y","size","areBoundsEqual","createDebounce","removeListeners","element","addListeners","scrollContainer","ref","node","findScrollContainers","useOnWindowScroll","useOnWindowResize","onWindowResize","cb","onScroll","enabled","result","overflow","overflowX","overflowY","prop","keys","a","b","key"],"mappings":"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","x_google_ignoreList":[0]}